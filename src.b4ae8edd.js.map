{"version":3,"sources":["index.js"],"names":["CountdownTimer","selector","targetDate","Date","getTime","time","now","days","Math","floor","hours","mins","secs","timer","timerMarkup","document","querySelector","querySelectorAll","addMarkupTimer","el","key","dataset","value","textContent","counterDownTime","setInterval","forEach"],"mappings":";;;AA2BC,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA3BD,QAAA,qBACMA,IAAAA,EAAAA,WACgC,SAAA,EAAA,GAAvBC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAa,EAAA,KAAA,GAC7BD,KAAAA,SAAWA,EACXC,KAAAA,WAAa,IAAIC,KAAKD,GAAYE,UAuB1C,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,kBArBC,MAAA,WACIC,IAAAA,EAAO,KAAKH,WAAaC,KAAKG,MAK3B,MAAA,CAACC,KAJKC,KAAKC,MAAMJ,EAAQ,OAIlBK,MAHAF,KAAKC,MAAOJ,EAAQ,MAAyB,MAGtCM,KAFRH,KAAKC,MAAOJ,EAAQ,KAAoB,KAE1BO,KADdJ,KAAKC,MAAOJ,EAAQ,IAAc,UAgBhD,EA1BKL,GAeAa,EAAQ,IAAIb,EAAe,CAC/BC,SAAU,WACVC,WAAY,mBAGRY,EAAcC,SAASC,cAAcH,EAAMZ,UAAUgB,iBAAiB,gBAG5E,SAASC,EAAeC,GACpBC,IAAAA,EAAMD,EAAGE,QAAQC,MACnBH,EAAGI,YAAcV,EAAMW,kBAAkBJ,GAJ3CK,YAAY,WAAIX,OAAAA,EAAYY,QAAQR,IAAiB","file":"src.b4ae8edd.js","sourceRoot":"..\\src","sourcesContent":["import './css/styles.scss'\r\nclass CountdownTimer {\r\n  constructor({selector, targetDate}) {\r\n    this.selector = selector;\r\n    this.targetDate = new Date(targetDate).getTime();\r\n  }\r\n  counterDownTime() {\r\n  let time = this.targetDate - Date.now()\r\n  const days = Math.floor(time / (1000 * 60 * 60 * 24));\r\n  const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n  const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\r\n  const secs = Math.floor((time % (1000 * 60)) / 1000);\r\n  return {days, hours, mins, secs}\r\n  }\r\n}\r\n\r\nconst timer = new CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: 'April 12, 2021',\r\n});\r\n\r\nconst timerMarkup = document.querySelector(timer.selector).querySelectorAll('[data-value]')\r\nsetInterval(()=>timerMarkup.forEach(addMarkupTimer), 0)\r\n\r\nfunction addMarkupTimer(el) {\r\nlet key = el.dataset.value\r\n  el.textContent = timer.counterDownTime()[key]\r\n}"]}